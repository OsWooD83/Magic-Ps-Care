# Script de v√©rification rapide de l'√©tat du projet PS Care

Write-Host "üîç V√©rification Rapide - PS Care Magic Show" -ForegroundColor Cyan
Write-Host "==========================================" -ForegroundColor Cyan

# 1. V√©rifier les fichiers essentiels
Write-Host "`nüìã 1. Fichiers essentiels:" -ForegroundColor Yellow
$files = @{
    "api/index.js" = "API Vercel principale"
    "vercel.json" = "Configuration Vercel"
    "server-local.js" = "Serveur local de test"
    "test-all-apis.js" = "Script de tests"
    "package.json" = "D√©pendances Node.js"
    "index.html" = "Page d'accueil"
}

foreach ($file in $files.Keys) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file - $($files[$file])" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file - MANQUANT!" -ForegroundColor Red
    }
}

# 2. V√©rifier la derni√®re URL de d√©ploiement
Write-Host "`nüåê 2. Derni√®re URL de d√©ploiement:" -ForegroundColor Yellow
if (Test-Path "DEPLOYMENT_URL.txt") {
    $lastUrl = Get-Content "DEPLOYMENT_URL.txt" -Raw
    Write-Host "üìç URL sauvegard√©e: $($lastUrl.Trim())" -ForegroundColor Cyan
    
    # Test rapide de l'URL
    try {
        Write-Host "üß™ Test rapide de l'URL..." -ForegroundColor Yellow
        $response = Invoke-WebRequest -Uri $lastUrl.Trim() -Method Head -TimeoutSec 10 -ErrorAction Stop
        Write-Host "‚úÖ Site accessible (HTTP $($response.StatusCode))" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Site non accessible ou lent: $($_.Exception.Message)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Aucune URL de d√©ploiement trouv√©e" -ForegroundColor Red
}

# 3. V√©rifier le statut Vercel
Write-Host "`n‚öôÔ∏è  3. Statut Vercel CLI:" -ForegroundColor Yellow
try {
    $vercelWho = vercel whoami 2>$null
    if ($vercelWho) {
        Write-Host "‚úÖ Connect√© √† Vercel: $vercelWho" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Non connect√© √† Vercel" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Vercel CLI non disponible" -ForegroundColor Red
}

# 4. Tester la limite de d√©ploiement Vercel
Write-Host "`nüöÄ 4. Test de limite Vercel:" -ForegroundColor Yellow

Write-Host "üí° Commandes utiles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ .\redeploy-after-limit.ps1  - Red√©ploiement automatique apr√®s limite" -ForegroundColor White
Write-Host "   ‚Ä¢ node test-all-apis.js       - Tester toutes les APIs localement" -ForegroundColor White
Write-Host "   ‚Ä¢ vercel --prod --yes         - D√©ploiement manuel (si limite lev√©e)" -ForegroundColor White

Write-Host "`n‚ú® V√©rification termin√©e!" -ForegroundColor Green
Write-Host "  Backend:  $backendUrl" -ForegroundColor White
