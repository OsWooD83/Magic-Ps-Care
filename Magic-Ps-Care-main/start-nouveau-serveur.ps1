# Script de d√©marrage du nouveau serveur Vercel
Write-Host "üöÄ D√âMARRAGE DU NOUVEAU SERVEUR VERCEL" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Cyan

Write-Host "`nüìã Informations du serveur:" -ForegroundColor Yellow
Write-Host "Nom: tw-pascal-nouveau" -ForegroundColor White
Write-Host "URL Production: https://tw-pascal-nouveau-pdp5l9lf2-association-ps-cares-projects.vercel.app" -ForegroundColor Cyan
Write-Host "Status: ‚úÖ ACTIF" -ForegroundColor Green

Write-Host "`nüõ†Ô∏è  Options disponibles:" -ForegroundColor Yellow
Write-Host "1. D√©marrer serveur de d√©veloppement local (vercel dev)" -ForegroundColor White
Write-Host "2. Red√©ployer en production (vercel --prod)" -ForegroundColor White
Write-Host "3. Ouvrir le dashboard Vercel" -ForegroundColor White
Write-Host "4. Tester les APIs" -ForegroundColor White

$choice = Read-Host "`nChoisissez une option (1-4)"

switch ($choice) {
    "1" {
        Write-Host "`nüîß D√©marrage du serveur de d√©veloppement..." -ForegroundColor Cyan
        Write-Host "üåê Disponible sur: http://localhost:3000" -ForegroundColor Green
        Write-Host "‚èπÔ∏è  Appuyez sur Ctrl+C pour arr√™ter" -ForegroundColor Yellow
        vercel dev --listen 3000
    }
    "2" {
        Write-Host "`nüì§ Red√©ploiement en production..." -ForegroundColor Cyan
        vercel --prod
    }
    "3" {
        Write-Host "`nüñ•Ô∏è  Ouverture du dashboard..." -ForegroundColor Cyan
        Start-Process "https://vercel.com/association-ps-cares-projects/tw-pascal-nouveau"
    }
    "4" {
        Write-Host "`nüß™ Test des APIs..." -ForegroundColor Cyan
        $apiUrl = "https://tw-pascal-nouveau-pdp5l9lf2-association-ps-cares-projects.vercel.app/api"
        
        Write-Host "üîç Test API Health..." -ForegroundColor Yellow
        try {
            $response = Invoke-WebRequest -Uri "$apiUrl/health" -UseBasicParsing -TimeoutSec 10
            Write-Host "‚úÖ API Health: $($response.StatusCode)" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå API Health: Erreur" -ForegroundColor Red
        }
        
        Write-Host "üîç Test API Photos..." -ForegroundColor Yellow
        try {
            $response = Invoke-WebRequest -Uri "$apiUrl/photos" -UseBasicParsing -TimeoutSec 10
            Write-Host "‚úÖ API Photos: $($response.StatusCode)" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå API Photos: Erreur" -ForegroundColor Red
        }
    }
    default {
        Write-Host "‚ùå Option invalide" -ForegroundColor Red
    }
}

Write-Host "`n‚ú® Termin√©!" -ForegroundColor Green
