# Script de suppression du serveur association-magic-ps-care
Write-Host "üóëÔ∏è  SUPPRESSION DU SERVEUR ASSOCIATION-MAGIC-PS-CARE" -ForegroundColor Red
Write-Host "=================================================" -ForegroundColor Yellow

Write-Host "`nüìã Serveur √† supprimer: association-magic-ps-care" -ForegroundColor Yellow
Write-Host "`n‚ö†Ô∏è  ATTENTION: Cette action est irr√©versible!" -ForegroundColor Red
Write-Host "‚úÖ Le nouveau serveur 'tw-pascal-nouveau' sera conserv√©" -ForegroundColor Green

$confirm = Read-Host "`nConfirmez-vous la suppression de 'association-magic-ps-care' ? (oui/non)"

if ($confirm -eq "oui" -or $confirm -eq "o" -or $confirm -eq "yes" -or $confirm -eq "y") {
    
    Write-Host "`nüîç Recherche du projet..." -ForegroundColor Yellow
    
    # Essayer diff√©rentes variantes du nom
    $projectNames = @(
        "association-magic-ps-care",
        "association-Magic-Ps-Care", 
        "magic-ps-care",
        "Magic-Ps-Care"
    )
    
    $found = $false
    
    foreach ($projectName in $projectNames) {
        Write-Host "`nüóëÔ∏è  Tentative de suppression: $projectName" -ForegroundColor Yellow
        
        try {
            # Ex√©cuter la commande et capturer la sortie
            $result = vercel projects rm $projectName --yes 2>&1
            
            if ($result -like "*removed*" -or $result -like "*deleted*" -or $result -like "*success*") {
                Write-Host "‚úÖ $projectName supprim√© avec succ√®s!" -ForegroundColor Green
                $found = $true
                break
            } elseif ($result -like "*not found*" -or $result -like "*does not exist*") {
                Write-Host "‚ÑπÔ∏è  $projectName n'existe pas" -ForegroundColor Cyan
            } else {
                Write-Host "‚ö†Ô∏è  $projectName : $result" -ForegroundColor Yellow
            }
        } catch {
            Write-Host "‚ùå Erreur lors de la suppression de $projectName : $($_.Exception.Message)" -ForegroundColor Red
        }
        
        Start-Sleep -Seconds 1
    }
    
    if (-not $found) {
        Write-Host "`nüîç Listage de tous les projets pour v√©rification..." -ForegroundColor Yellow
        try {
            $allProjects = vercel projects ls 2>&1
            Write-Host "`nProjets trouv√©s:" -ForegroundColor Cyan
            Write-Host $allProjects -ForegroundColor White
            
            Write-Host "`nüí° Si le projet existe avec un nom diff√©rent, notez-le et relancez le script" -ForegroundColor Yellow
        } catch {
            Write-Host "‚ùå Impossible de lister les projets" -ForegroundColor Red
        }
    }
    
    # Nettoyage des fichiers locaux li√©s √† l'ancien projet
    Write-Host "`nüßπ Nettoyage des fichiers locaux..." -ForegroundColor Yellow
    
    $filesToClean = @(
        "association-magic-ps-care*",
        "*magic-ps-care*",
        "DEPLOYMENT_URL.txt",
        "deployment-url.txt"
    )
    
    foreach ($pattern in $filesToClean) {
        $files = Get-ChildItem -Path . -Name $pattern -ErrorAction SilentlyContinue
        foreach ($file in $files) {
            try {
                Remove-Item $file -Force
                Write-Host "‚úÖ Supprim√©: $file" -ForegroundColor Green
            } catch {
                Write-Host "‚ö†Ô∏è  Impossible de supprimer: $file" -ForegroundColor Yellow
            }
        }
    }
    
    Write-Host "`n‚úÖ PROCESSUS TERMIN√â!" -ForegroundColor Green
    Write-Host "üöÄ Serveur actuel: tw-pascal-nouveau" -ForegroundColor Cyan
    Write-Host "üåê URL active: https://tw-pascal-nouveau-pdp5l9lf2-association-ps-cares-projects.vercel.app" -ForegroundColor Cyan
    
} else {
    Write-Host "`n‚ùå Suppression annul√©e par l'utilisateur" -ForegroundColor Yellow
}

Write-Host "`nüèÅ Script termin√©!" -ForegroundColor Green
